entity Controle is
    Port (
        opcode : in STD_LOGIC_VECTOR(3 downto 0);  -- Opcode da instrução (4 bits)
        funct3 : in STD_LOGIC_VECTOR(2 downto 0);  -- Funct3 da instrução (3 bits)
        funct7 : in STD_LOGIC_VECTOR(6 downto 0);  -- Funct7 da instrução (7 bits)
        MemRead : out STD_LOGIC;                   -- Sinal de leitura de memória
        MemWrite : out STD_LOGIC;                  -- Sinal de escrita em memória
        RegDst : out STD_LOGIC;                    -- Sinal de destino do registrador
        RegWrite : out STD_LOGIC;                  -- Sinal de escrita em registrador
        Branch : out STD_LOGIC;                    -- Sinal de branch
        ALUSrc : out STD_LOGIC;                    -- Sinal de fonte da ALU
        ALUOp : out STD_LOGIC_VECTOR(2 downto 0)    -- Código de operação da ALU (3 bits)
    );
end Controle;

architecture Controle_arch of Controle is
begin
    process (opcode, funct3, funct7)
    begin
        -- Definir os sinais de controle com base no opcode, funct3 e funct7
        case opcode is
            when "0000" =>  -- Instrução tipo R
                case funct3 is
                    when "000" =>
                        case funct7 is
                            when "0000000" =>
                                -- ADD
                                MemRead <= '0';
                                MemWrite <= '0';
                                RegDst <= '1';
                                RegWrite <= '1';
                                Branch <= '0';
                                ALUSrc <= '0';
                                ALUOp <= "000";
                            when others =>
                                -- Outra instrução tipo R
                                -- Definir os sinais de controle apropriados
                        end case;
                    when others =>
                        -- Outra instrução tipo R
                        -- Definir os sinais de controle apropriados
                end case;
            when "0001" =>  -- Instrução tipo I
                -- Definir os sinais de controle apropriados para instruções tipo I
            when "0010" =>  -- Instrução tipo S
                -- Definir os sinais de controle apropriados para instruções tipo S
            when "0011" =>  -- Instrução tipo SB
                -- Definir os sinais de controle apropriados para instruções tipo SB
            when "0100" =>  -- Instrução tipo U
                -- Definir os sinais de controle apropriados para instruções tipo U
            when "0101" =>  -- Instrução tipo UJ
                -- Definir os sinais de controle apropriados para instruções tipo UJ
            when others =>
                -- Outro opcode
                -- Definir os sinais de controle apropriados
        end case;
    end process;
end Controle_arch;
